いやー最初のコントローラーの入力をSDLを使ってゲットしようとしてvenvでpygame入れて無理やりsys.pathでpygame読み込もうとしたらなんとSDLのバージョン違いでエラーが出た事件（windowsでのはなし、多分ubuntuとかarchだったらblenderのつかうpythonとpip経由でインストールするpygameに紐付けられるSDLのバージョンは同じはず？だから問題は怒らないんだろうけど、、）から、、→これは当初の予定通りHaskellで頑張ることにしたので解決。やっぱりコンパイル済みの製品に対してあとからライブラリを追加するのは良くないね、、プロセスを分けなければ、、

HaskellのSDL binding が超絶使いづらかったり、、text qq のメンテナが超有名人だったのを知って驚愕したり、

blenderのapiドキュメントもなかなか分かりづらい中でがんばって手探りで操作対象のオブジェクトまでたどり着くまでの果てしない旅とか、、

blenderのpythonコードだとthreadingがなんかの防御機能かなにかなのか、位置情報などの値を変更しようとしても反映されたりされなかったり、同じオブジェクトを参照しているはずなのになぜかスレッド越しではNoneになってしまったりする謎のバグとか、
→これは最初の頃はメインスレッドで一旦参照してそれをグローバル変数に格納することでtcpのスレッドでもなんとか参照できるようになった、、、が、やっぱりスレッド越しなので完全にcpuとosの気分次第？で動いたり動かなかったりするヤバみな感じになってしもうた、、
→これはなんとかblenderのタイマー機能を駆使してメインスレッド内で処理を完結させた！！！タイマー越しでソケット操作はヤバすぎる！！

